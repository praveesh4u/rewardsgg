<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use AppBundle\Helper\Pagination;

/**
 * GiveawayRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GiveawayRepository extends EntityRepository
{

    public function findByPagination(Pagination &$pagination)
    {
        /* Initialize Pagination Parameter */
        $pagination->setConf('id', array(
            'default' => false,
            'colName' => 'g.id',
            'displayName' => 'ID',
            'searchable' => false,
            'disable' => false,
        ))
            ->setConf('name', array(
                'default' => true,
                'colName' => 'g.name',
                'displayName' => 'Name',
                'searchable' => true,
                'disable' => false,
            ))
            ->setConf('price', array(
                'default' => false,
                'colName' => 'g.price',
                'displayName' => 'Price',
                'disable' => false,
                'searchable' => false
            ))
            ->setConf('slug', array(
                'default' => false,
                'colName' => 'g.slug',
                'displayName' => 'Slug',
                'disable' => true,
                'searchable' => false
            ))
            ->init();

        /* Get Total */
        $qbTotal = $this->createQueryBuilder('g');

        $qbTotal->select('count(g)');
        $pagination->getSearchableQuery($qbTotal);
        $qeuryTotal = $qbTotal->getQuery();

        $pagination->setTotalResults($qeuryTotal->getSingleScalarResult());



        $qb = $this->createQueryBuilder('g');
        $qb->select('g');

        $pagination->getSearchableQuery($qb);

        $q = $qb->orderBy($pagination->getSortCol(), $pagination->getOrderBy())
            ->setMaxResults($pagination->getMaxResultsPerPage())
            ->setFirstResult($pagination->getOffset())
            ->getQuery()
        ;

        return  $q->getResult();

    }


    public function getSearchResults()
    {

    }
}
